FROM osrf/ros:humble-desktop

# 1. build args / env
ARG TARGET_ROBOT
ARG TARGET_DDS
ENV TARGET_ROBOT=${TARGET_ROBOT}
ENV TARGET_DDS=${TARGET_DDS}
ENV DEBIAN_FRONTEND=noninteractive
ENV CC=clang-16
ENV CXX=clang++-16
ENV ASAN_OPTIONS="detect_leaks=0:new_delete_type_mismatch=0:handle_segv=0:abort_on_error=0:symbolize=1"

# 2. install core tools
RUN apt-get update && apt-get install -y \
      build-essential \
      cmake \
      git \
      python3-colcon-common-extensions \
      python3-pip \
      python3-rosdep \
      python3-vcstool \
      wget \
      lsb-release \
      software-properties-common \
      gnupg \
      libtinyxml2-dev \
      libasio-dev \
    && rm -rf /var/lib/apt/lists/*

# 3. install LLVM/Clang 16 + libFuzzer
RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \
 && add-apt-repository "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-16 main" \
 && apt-get update && apt-get install -y \
      clang-16 \
      llvm-16 \
      libclang-16-dev \
      libfuzzer-16-dev \
    && rm -rf /var/lib/apt/lists/*

# 4. prepare workspace
WORKDIR /workspace
COPY . /workspace

# 5. run robot setup
RUN chmod +x ./${TARGET_ROBOT}.sh \
 && bash ./${TARGET_ROBOT}.sh

# 6. run DDS build
RUN chmod +x ./${TARGET_DDS}/build.sh \
 && bash ./${TARGET_DDS}/build.sh

# 7. entrypoint
RUN echo '#!/usr/bin/env bash\n\
source /opt/ros/humble/setup.bash\n\
exec "$@"' > /ros_entrypoint.sh \
 && chmod +x /ros_entrypoint.sh

ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
